{"version":3,"sources":["components/ClockTrybe.jsx","components/Timer.jsx","components/Watch.jsx","App.js","reportWebVitals.js","index.js"],"names":["ClockTrybe","props","state","clock","this","clocker","setInterval","t","Date","toLocaleTimeString","setState","clearInterval","Fragment","Alert","className","variant","Component","Timer","min","sec","stop","minutes","seconds","parseInt","document","getElementById","style","strokeDashoffset","timer","oldState","timeProp","timeState","percentage","toFixed","listLinks","setTimeout","random","Math","round","length","source","querySelector","innerHTML","viewBox","width","height","cx","cy","r","id","Watch","init","elements","querySelectorAll","m","s","condition1","value","condition2","alert","forEach","el","display","InputGroup","Prepend","Text","Form","Control","defaultValue","name","type","max","Button","onClick","sendTime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.740ead02.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default class ClockTrybe extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      clock: null\n    }\n  }\n\n  componentDidMount() {\n    \n    const myTimer = () => {\n      let d = new Date();\n      let t = d.toLocaleTimeString();\n      this.setState({clock: t})\n    }\n    this.clocker = setInterval(myTimer, 100);\n    \n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clocker)\n  }\n\n  render() {\n    const {clock} = this.state\n    return (\n      <React.Fragment>\n\n        <Alert className=\"quote\" variant=\"info\">\n          <em>\n            \"Que não se tenha pressa, mas que não se perca tempo.\"\n          </em>\n        </Alert>\n\n        <>\n          Hora local: {\" \"}\n          <span className=\"number clock\">\n            {clock}\n          </span>\n          <hr/>\n        </>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\n\nexport default class Timer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      min: 0,\n      sec: 0,\n      stop: true, \n    }\n  }\n  componentDidMount() {\n    const {minutes, seconds} = this.props\n    if(minutes || seconds) {\n\n      this.setState({ min: parseInt(minutes), sec: parseInt(seconds) })\n      const {style} = document.getElementById('progress')\n      style.strokeDashoffset = `calc(240 - (240 * 100) / 100)`\n      this.timer = setInterval(() => {\n        if(!this.state.sec) {\n          this.setState(oldState => ({...oldState, min: this.state.min-1, sec: 60}))\n        }\n        this.setState(oldState => ({...oldState, sec: this.state.sec-1}))\n      }, 1000)\n    }\n  }\n  \n  componentDidUpdate(){\n    const {minutes, seconds} = this.props\n    \n    const {min, sec} = this.state\n    const timeProp = parseInt(minutes * 60) + parseInt(seconds)\n    const timeState = parseInt(min * 60) + parseInt(sec)\n    const {style} = document.getElementById('progress')\n    const percentage = ((timeState/timeProp) * 100).toFixed(2)\n    style.strokeDashoffset = `calc(240 - (240 * ${percentage}) / 100)`\n    if(!this.state.min && !this.state.sec) {\n      const listLinks = [\n        'https://media.giphy.com/media/tIkn1XiX95mZPDZ4Gr/giphy.gif',\n        'https://media.giphy.com/media/lffW0sDfrzBXr1AxME/giphy.gif',\n        'https://media.giphy.com/media/KyCFtZE3LvGom5Imdj/giphy.gif',\n        'https://media.giphy.com/media/jqScOnk9Dqk7ILU4kF/giphy.gif',\n        'https://media.giphy.com/media/RgnTXvE24wFjUhB3Dt/giphy.gif',\n        'https://media.giphy.com/media/xUySTEJYS5F1Cayg92/giphy.gif',\n        'https://media.giphy.com/media/psaxnXPg4sfOilpRkN/giphy.gif',\n      ]\n      clearInterval(this.timer)\n      setTimeout(() => {\n        const random = Math.round((listLinks.length - 1) * Math.random())\n        const source = listLinks[random]\n        // const source = './animation.gif'\n        const box = document.querySelector('.box')\n        box.innerHTML = `<img src=\"${source}\" width=\"500px\" alt=\"tempo esgotado\">`\n\n      }, 500)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n    // console.log(\"morri\")\n  }\n  \n  render() {\n    const {min, sec} = this.state\n    return (\n      <div className=\"box\">\n        <div className=\"percent\">\n          <svg viewBox=\"0 0 80 80\" width=\"220\" height=\"220\">\n            <circle cx=\"40\" cy=\"40\" r=\"38\"></circle>\n            <circle id=\"progress\" cx=\"40\" cy=\"40\" r=\"38\"></circle>\n          </svg>\n          <div className=\"number\">\n            <h2>{min >= 10 ? min : `0${min}`} : {sec >= 10 ? sec : `0${sec}`} </h2>             \n          </div>          \n        </div>\n        <h2 className=\"text\">\n          Aguarde . . .\n        </h2>        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { InputGroup } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport ClockTrybe from './ClockTrybe'\nimport Timer from './Timer'\n\nexport default class Watch extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      minutes: 0,\n      seconds: 0,\n      init: false, \n    }\n  }\n  \n  sendTime() {\n    const elements = document.querySelectorAll('.toHide')\n    const [m, s] = [document.querySelector(`[name='minutes']`), document.querySelector(`[name='seconds']`)]\n    const [condition1, condition2] = [\n      (parseInt(m.value) >= 0 && parseInt(m.value) <= 99), (parseInt(s.value) >= 0 && parseInt(s.value) <= 59),\n    ]\n    \n    if (condition1 && condition2) {\n      if (parseInt(m.value) === 0 && parseInt(s.value) === 0) {\n        alert('Tempo inválido!')\n      } else {\n        elements.forEach(el => el.style.display = 'none')\n        this.setState({minutes: m.value || 0, seconds: s.value || 0, init: true})\n        m.value = null\n        s.value = null\n      }\n    } else {\n      alert('Limite máximo de 99 para minutos e 59 para segundos.')\n    }\n  }\n  stop() {\n    const [m, s] = [document.querySelector(`[name='minutes']`), document.querySelector(`[name='seconds']`)]\n    m.value = 0\n    s.value = 0\n    const elements = document.querySelectorAll('.toHide')\n    elements.forEach(el => el.style.display = '')\n    this.setState(oldState => ({...oldState, init: false}))\n  }\n\n  render() {\n    const {minutes, seconds, init} = this.state\n    return (\n      <React.Fragment>\n       \n        {init ? <Timer minutes={minutes} seconds={seconds}/> :  <ClockTrybe/>}\n \n        <br/>\n        <div className=\"input-group toHide\">\n\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroup-sizing-default\">Minutos</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control className=\"form-control\" defaultValue=\"0\" name=\"minutes\" type=\"number\" min=\"0\" max=\"99\" />\n          \n          </InputGroup>\n\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroup-sizing-default\">Segundos</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control className=\"form-control\" defaultValue=\"0\" name=\"seconds\" type=\"number\" min=\"0\" max=\"59\" />\n          \n          </InputGroup>\n        </div>\n  \n        <div className=\"button-group\">\n          <Button variant=\"primary\" className=\"toHide\" onClick={() => this.sendTime()}>Iniciar</Button>\n          <Button variant=\"danger\" onClick={() => this.stop()}>Encerrar</Button>\n        </div>\n  \n\n      </React.Fragment>\n    )\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Watch from './components/Watch';\n\nfunction App() {\n  return (\n    <>\n      <h4 className=\"title\">\n        CronomeTrybe\n      </h4>\n      <Watch/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}